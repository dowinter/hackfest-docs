kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/route-disabled: 'false'
    deployment.kubernetes.io/revision: '1'
    image.openshift.io/triggers: >-
      [{"from":{"kind":"ImageStreamTag","name":"kafka-ui:latest","namespace":"hackfest2023"},"fieldPath":"spec.template.spec.containers[?(@.name==\"kafka-ui\")].image","pause":"false"}]
    openshift.io/generated-by: OpenShiftWebConsole
  name: kafka-ui
  namespace: hackfest2023
  labels:
    app: kafka-ui
    app.kubernetes.io/component: kafka-ui
    app.kubernetes.io/instance: kafka-ui
    app.kubernetes.io/name: kafka-ui
    app.kubernetes.io/part-of: qiot-retail-edgepos-manager-git-app
    app.openshift.io/runtime: windows
    app.openshift.io/runtime-namespace: hackfest2023
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-ui
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: kafka-ui
        deploymentconfig: kafka-ui
      annotations:
        openshift.io/generated-by: OpenShiftWebConsole
    spec:
      containers:
        - name: kafka-ui
          image: >-
            image-registry.openshift-image-registry.svc:5000/hackfest2023/kafka-ui@sha256:9b16bb102e25b3df3b72dd4972da100c3e32ae44637df5cbd751b7e6547b75ea
          ports:
            - containerPort: 8080
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
